\PassOptionsToPackage{pdfa,unicode=true}{hyperref} % options for packages loaded elsewhere
\PassOptionsToPackage{hyphens}{url}
$if(colorlinks)$
\PassOptionsToPackage{dvipsnames*,svgnames,x11names*}{xcolor}
$endif$$if(dir)$$if(latex-dir-rtl)$
\PassOptionsToPackage{RTLdocument}{bidi}
$endif$$endif$%
\documentclass[$if(fontsize)$$fontsize$,$endif$$if(lang)$$babel-lang$,$endif$$if(papersize)$$papersize$paper,$endif$$if(beamer)$ignorenonframetext,$if(handout)$handout,$endif$$if(aspectratio)$aspectratio=$aspectratio$,$endif$$endif$$for(classoption)$$classoption$$sep$,$endfor$]{$documentclass$}

\ifx\pdfoutput\undefined\let\pdfoutput\outputmode\fi
\newif\ifpdf\pdftrue
\ifx\pdfoutput\undefined\pdffalse\else\pdftrue\fi
\ifpdf
  \PackageInfo{\jobname}{Compiled \jobname{} with PDF}
  \ifpdf\usepackage[a-3u]{pdfx}\fi
\else
\GenericError{\jobname}{\jobname{} Error: no PDF output}
  {Must be compiled with PDF output}
  {Sorry, \jobname must be compiled with PDF output}
\fi

\newif\ifdraft$if(draft)$\drafttrue$else$\draftfalse$endif$
\newif\ifverbose$if(verbose)$\verbosetrue$else$\verbosefalse$endif$

$if(fontfamily)$
\usepackage[$for(fontfamilyoptions)$$fontfamilyoptions$$sep$,$endfor$]{$fontfamily$}
$else$
\usepackage{lmodern}
$endif$
$if(linestretch)$
\usepackage{setspace}
\setstretch{$linestretch$}
$endif$
\usepackage{mathtools,amssymb,amsmath}
\usepackage{ifthen,ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[$if(fontenc)$$fontenc$$else$T1$endif$]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provides euro and other symbols
\else % if luatex or xelatex
$if(mathspec)$
  \ifxetex
    \usepackage{mathspec}
  \else
    \usepackage[math-style=TeX]{unicode-math}
  \fi
$else$
  \usepackage[math-style=TeX]{unicode-math}
$endif$
  \ifxetex
  %  \usepackage{mathspec}%% already loaded
  \else
    \pdfvariable suppressoptionalinfo 511 % writes only ID to PDF Catalog
    % New with TeXlive 2016. Removes unnecessary File Data:
    \usepackage{luatexbase,luacode}
    \usepackage{luaotfload}
    \usepackage{fontspec}
    \IfFileExists{luatexja-fontspec.sty}{\usepackage{luatexja-fontspec}}{}
  \fi
  \defaultfontfeatures{Ligatures=TeX,Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Scale = 1}
$for(fontfamilies)$
  \newfontfamily{$fontfamilies.name$}[$fontfamilies.options$]{$fontfamilies.font$}
$endfor$
$if(mainfont)$
  \setmainfont[$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$]{$mainfont$}
$else$
  \setmainfont{TeX Gyre Termes}[SlantedFont =lmromanslant10-regular.otf]
$endif$
$if(romanfont)$
  \setromanfont[$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$]{$mainfont$}
$endif$
$if(sansfont)$
  \setsansfont[$for(sansfontoptions)$$sansfontoptions$$sep$,$endfor$]{$sansfont$}
$else$
  \setsansfont{Calibri}
%  \setsansfont[
%    Path=../assets/fonts/,
%    BoldItalicFont=CALIBRIZ.TTF,
%    BoldFont      =CALIBRIB.TTF,
%    ItalicFont    =CALIBRII.TTF,
%    SlantedFont   =CALIBRILI.TTF
%  ]{calibri.otf}
$endif$
$if(monofont)$
  \setmonofont[Mapping=tex-ansi$if(monofontoptions)$,$for(monofontoptions)$$monofontoptions$$sep$,$endfor$$endif$]{$monofont$}
$endif$
$if(mathfont)$
$if(mathspec)$
  \ifxetex
    \setmathfont(Digits,Latin,Greek)[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \else
    \setmathfont{$mathfont$}[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]
  \fi
$else$
  \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
$endif$
$endif$
$if(CJKmainfont)$
  \ifxetex
    \usepackage{xeCJK}
    \setCJKmainfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
$if(luatexjapresetoptions)$
  \ifluatex
    \usepackage[$for(luatexjapresetoptions)$$luatexjapresetoptions$$sep$,$endfor$]{luatexja-preset}
  \fi
$endif$
$if(CJKmainfont)$
  \ifluatex
    \usepackage[$for(luatexjafontspecoptions)$$luatexjafontspecoptions$$sep$,$endfor$]{luatexja-fontspec}
    \setmainjfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
\fi
% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
% use microtype if available
\IfFileExists{microtype.sty}{%
\usepackage[$for(microtypeoptions)$$microtypeoptions$$sep$,$endfor$]{microtype}
\UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$
\hypersetup{
  psdextra,hyperindex=true,pagebackref,
  hypertexnames=false,
  pdfpagelabels=true,
  bookmarks=true,
$if(lang)$
  pdflang={$lang$},
$endif$
$if(title-meta)$
  pdftitle={$title-meta$},
$endif$
$if(author-meta)$
  pdfauthor={$author-meta$},
$endif$
$if(keywords)$
  pdfkeywords={$for(keywords)$$keywords$$sep$, $endfor$},
$endif$
$if(colorlinks)$
  colorlinks=true,
  linkcolor=$if(linkcolor)$$linkcolor$$else$DarkCyan$endif$,
  citecolor=$if(citecolor)$$citecolor$$else$DarkGreen$endif$,
  urlcolor=$if(urlcolor)$$urlcolor$$else$DarkBlue$endif$,
$else$
  pdfborder={0 0 0},
$endif$
  breaklinks=true}
\urlstyle{same}  % don't use monospace font for urls
$if(verbatim-in-note)$
\VerbatimFootnotes % allows verbatim text in footnotes
$endif$
$if(geometry)$
\usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
$endif$
$if(lang)$
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[shorthands=off,$for(babel-otherlangs)$$babel-otherlangs$,$endfor$main=$babel-lang$]{babel}
$if(babel-newcommands)$
  $babel-newcommands$
$endif$
\else
  \usepackage{polyglossia}
  \setmainlanguage[$polyglossia-lang.options$]{$polyglossia-lang.name$}
$for(polyglossia-otherlangs)$
  \setotherlanguage[$polyglossia-otherlangs.options$]{$polyglossia-otherlangs.name$}
$endfor$
\fi
$endif$
$if(biblatex)$
\usepackage{csquotes}
\usepackage[$if(biblio-style)$bibstyle=$biblio-style$,$endif$$for(biblatexoptions)$$biblatexoptions$$sep$,$endfor$]{biblatex}
$for(bibliography)$
\addbibresource{$biblio-dir-prefix$$bibliography$}
$endfor$
$else$
$if(natbib)$
\usepackage[$for(natbib-options)$$natbib-options$$sep$,$endfor$]{natbib}
\bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}
$endif$
$endif$

$if(tables)$
\usepackage{longtable,booktabs}
% Fix footnotes in tables (requires footnote package)
\IfFileExists{footnote.sty}{\usepackage{footnote}\makesavenoteenv{long table}}{}
$endif$
$if(graphics)$
\usepackage{graphicx,grffile}
\makeatletter
\graphicspath{$for(graphics-path)${$graphics-path$}$sep$$endfor$}
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$
$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$
$if(indent)$
$else$
\IfFileExists{parskip.sty}{%
\usepackage{parskip}
}{% else
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
}
$endif$

$if(numbersections)$
\setcounter{secnumdepth}{$if(secnumdepth)$$secnumdepth$$else$5$endif$}
$else$
\setcounter{secnumdepth}{0}
$endif$
$if(subparagraph)$
$else$
% Redefines (sub)paragraphs to behave more like sections
\ifx\paragraph\undefined\else
\let\oldparagraph\paragraph
\renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
\fi
\ifx\subparagraph\undefined\else
\let\oldsubparagraph\subparagraph
\renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
\fi
$endif$
$if(dir)$
\ifxetex
  % load bidi as late as possible as it modifies e.g. graphicx
  $if(latex-dir-rtl)$
  \usepackage[RTLdocument]{bidi}
  $else$
  \usepackage{bidi}
  $endif$
\fi
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \TeXXeTstate=1
  \newcommand{\RL}[1]{\beginR #1\endR}
  \newcommand{\LR}[1]{\beginL #1\endL}
  \newenvironment{RTL}{\beginR}{\endR}
  \newenvironment{LTR}{\beginL}{\endL}
\fi
$endif$


$if(glossary)$
% Glossary / list of abbreviations
%nomain,acronym,section,nonumberlist,toc,xindy
\usepackage[$for(glossaries)$$glossaries$$sep$,$endfor$]{glossaries}
$if(idx)$
\makeglossaries
$else$
\makenoidxglossaries
$endif$
\glsnoexpandfields
$endif$

\usepackage{pandoc-df-thesis}
\usepackage{pandoc-df-thesis-theme}
\usepackage{pandoc-df-thesis-macros}

$for(header-includes)$
$header-includes$
$endfor$
\makeatletter
$if(glossary)$
\input{$glossary$}
$endif$

\makeatother

$if(title)$
\title$if(title-meta)$[$title-meta$]$endif${$title$$if(thanks)$\thanks{$thanks$}$endif$}
$endif$
$if(subtitle)$
\subtitle{$subtitle$}
$endif$
$if(subject)$
\subject{$subject$}
$endif$
$if(keywords)$
\keywords$if(keywords)$[$for(keywords)$$keywords$$sep$, $endfor$]$endif${$for(keywords)$$keywords$$sep$ \and $endfor$}
$endif$

$if(authors)$
\author$if(author-meta)$[$author-meta$]$endif${$for(authors)$$if(authors.name)$$authors.name$$else$$authors$$endif$$sep$ \and $endfor$}
$else$
$if(author)$
\author$if(author-meta)$[$author-meta$]$endif${$for(author)$$if(author.name)$$author.name$$else$$author$$endif$$sep$ \and $endfor$} %$if(author.affiliation)$\thanks{$author.affiliation$}$endif$
$endif$
$endif$
$if(institute)$
\institute{$for(institute)$$institute$$sep$ \and $endfor$}
$endif$
$if(copyright)$
\copyright{$copyright$}
$endif$
\date{$date$}

\begin{document}
$if(title)$
\maketitle
$endif$

% ------------------------------------------------------------------------------
% FRONTMATER -------------------------------------------------------------------
\frontmatter
$for(include-before)$
$include-before$
$endfor$
$for(frontmatter)$
\include{$frontmatter$}
$endfor$

$if(toc)$
{
$if(colorlinks)$
\hypersetup{linkcolor=$if(toccolor)$$toccolor$$else$black$endif$}
$endif$
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$
$if(lot)$
\listoftables
$endif$
$if(lof)$
\listoffigures
$endif$

\clearemptydoublepage
$if(glossary)$
% GLOSSARIES -------------------------------------------------------------------
\Glossaries
$endif$

% ------------------------------------------------------------------------------
% MAINMATER --------------------------------------------------------------------
\mainmatter

% BODY -------------------------------------------------------------------------

$body$

\clearemptydoublepage
% ------------------------------------------------------------------------------
% BACKMATTER--------------------------------------------------------------------
\backmatter

$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$
$else$
$if(natbib)$
$if(bibliography)$
$if(biblio-title)$
$if(book-class)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
\bibliography{$for(bibliography)$$biblio-dir-prefix$$bibliography$$sep$,$endfor$}
$endif$
$endif$
$endif$

$for(include-after)$
$include-after$
$endfor$

$for(backmatter)$
\include{$backmatter$}
$endfor$


% END OF DISSERTATION
\clearemptydoublepage

$if(abstract)$
% TODO: Support for abstract...
%\begin{abstract}
%$abstract$
%\end{abstract}
$endif$
\hbox{}\pagestyle{empty}

\end{document}
